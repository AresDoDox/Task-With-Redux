{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskItem.js\";\nimport React, { Component } from 'react';\nimport { Button, Badge } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\nclass TaskItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.editTask = () => {\n      this.props.onOpenForm();\n    };\n\n    this.onUpdateStatus = () => {\n      this.props.onUpdateStatus(this.props.task.id);\n    };\n\n    this.onDelete = () => {\n      this.props.onDeleteTask(this.props.task.id);\n      this.props.onCloseForm();\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        index = _this$props.index,\n        task = _this$props.task;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, task.namework), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: task.status ? \"success\" : \"danger\",\n      className: \"p-2\",\n      onClick: () => this.onUpdateStatus(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, task.status ? \"Kích hoạt\" : \"Ẩn\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"warning\",\n      onClick: () => this.editTask(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"S\\u1EEDa\"), ' ', React.createElement(Button, {\n      color: \"danger\",\n      onClick: () => this.onDelete(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"X\\xF3a\")));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {};\n};\n\nlet mapDispatchToProps = (dispatch, props) => {\n  return {\n    onUpdateStatus: id => {\n      dispatch(actions.updateStatus(id));\n    },\n    onDeleteTask: id => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: task => {\n      dispatch(actions.editTask());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskItem.js"],"names":["React","Component","Button","Badge","connect","actions","TaskItem","editTask","props","onOpenForm","onUpdateStatus","task","id","onDelete","onDeleteTask","onCloseForm","render","index","namework","status","mapStateToProps","state","mapDispatchToProps","dispatch","updateStatus","deleteTask","closeForm","openForm","onEditTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button, Badge\n} from 'reactstrap';\n\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\n\nclass TaskItem extends Component {\n\n    editTask = () => {\n        this.props.onOpenForm();\n    }\n\n    onUpdateStatus = () => {\n        this.props.onUpdateStatus(this.props.task.id);\n    }\n\n    onDelete = () => {\n        this.props.onDeleteTask(this.props.task.id);\n        this.props.onCloseForm();\n    }\n    render() {\n        let { index, task } = this.props;\n        return (\n            <tr>\n                <th scope=\"row\">{ index + 1 }</th>\n                <td>{ task.namework }</td>\n                <td>\n                    <Badge \n                        color={task.status ? \"success\" : \"danger\"} \n                        className=\"p-2\"\n                        onClick = {() => this.onUpdateStatus(task.id)}\n                    >\n                        {task.status ? \"Kích hoạt\" : \"Ẩn\"}\n                    </Badge>\n                </td>\n                <td>\n                    <Button color=\"warning\" onClick={()=>this.editTask(task.id)}>Sửa</Button>{' '}\n                    <Button color=\"danger\" onClick={()=> this.onDelete(task.id)}>Xóa</Button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {};\n};\n\nlet mapDispatchToProps = (dispatch, props) => {\n    return {\n        onUpdateStatus: (id) => {\n            dispatch(actions.updateStatus(id));\n        },\n        onDeleteTask: (id)=>{\n            dispatch(actions.deleteTask(id));\n        },\n        onCloseForm: () => {\n            dispatch(actions.closeForm());\n        },\n        onOpenForm: () => {\n            dispatch(actions.openForm());\n        },\n        onEditTask: (task) => {\n            dispatch(actions.editTask());\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(TaskItem);\n"]},"metadata":{},"sourceType":"module"}