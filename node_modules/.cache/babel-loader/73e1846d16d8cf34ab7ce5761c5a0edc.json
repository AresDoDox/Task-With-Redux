{"ast":null,"code":"import * as types from './../constants/ActionTypes';\nimport randomstring from 'randomstring'; // let data = JSON.parse(localStorage.getItem('tasks'));\n//Khai báo giá trị mặc định\n\nlet initialState = {}; // Các hàm\n//---Tìm index\n// let  findIndex = (tasks, id) => {\n//     let result = -1;\n//     tasks.forEach( (task,index) => {\n//       if(task.id === id){\n//         return result = index; \n//       }\n//     });\n//     return result;\n// }\n// let id ='';\n// let index = -1;\n//Khởi tạo reducer\n\nlet myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.EDIT_TASK:\n      console.log(action);\n    // id = action.id;\n    // index = findIndex(state, id);\n    // if( index !== -1){\n    //     state[index] = {\n    //         ...state[index],\n    //         status: !state[index].status \n    //     }\n    // }\n    // localStorage.setItem('tasks',JSON.stringify(state));\n    // return [...state];\n\n    default:\n      return state;\n  } // return state;\n\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-with-redux/src/reducers/task.js"],"names":["types","randomstring","initialState","myReducer","state","action","type","EDIT_TASK","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;AACA;;AACA,IAAIC,YAAY,GAAG,EAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;;AACA,IAAIC,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,KAAK,CAACO,SAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ;AACI,aAAOD,KAAP;AAdR,GAD8C,CAiB9C;;AACH,CAlBD;;AAoBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/ActionTypes';\nimport randomstring from 'randomstring';\n\n// let data = JSON.parse(localStorage.getItem('tasks'));\n//Khai báo giá trị mặc định\nlet initialState = {};\n\n// Các hàm\n//---Tìm index\n// let  findIndex = (tasks, id) => {\n//     let result = -1;\n//     tasks.forEach( (task,index) => {\n//       if(task.id === id){\n//         return result = index; \n//       }\n//     });\n//     return result;\n// }\n\n// let id ='';\n// let index = -1;\n\n\n//Khởi tạo reducer\nlet myReducer = (state = initialState, action) => {\n    switch(action.type){\n        case types.EDIT_TASK:\n            console.log(action);\n            // id = action.id;\n            // index = findIndex(state, id);\n            // if( index !== -1){\n            //     state[index] = {\n            //         ...state[index],\n            //         status: !state[index].status \n            //     }\n            // }\n            // localStorage.setItem('tasks',JSON.stringify(state));\n            // return [...state];\n        default:\n            return state;\n    }\n    // return state;\n};\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}