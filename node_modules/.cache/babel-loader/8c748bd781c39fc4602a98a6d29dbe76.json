{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/Sort.js\";\nimport React, { Component } from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = (softBy, softValue) => {\n      this.props.onSoft(softBy, softValue);\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  } // componentWillReceiveProps(nextProps){\n  //   console.log(nextProps);\n  // }\n\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    return React.createElement(ButtonDropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"S\\u1EAFp x\\u1EBFp\"), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: () => this.onClick('name', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"T\\xEAn A-Z\"), React.createElement(DropdownItem, {\n      onClick: () => this.onClick('name', -1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"T\\xEAn Z-A\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      onClick: () => this.onClick('status', 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng th\\xE1i K\\xEDch ho\\u1EA1t\"), React.createElement(DropdownItem, {\n      onClick: () => this.onClick('status', -1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng th\\xE1i \\u1EA8n\")));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {};\n};\n\nlet mapDispatchToProps = (dispatch, action) => {\n  return {\n    onSearch: keyword => {\n      dispatch(actions.searchTasks(keyword));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/Sort.js"],"names":["React","Component","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","connect","actions","Sort","constructor","props","onClick","softBy","softValue","onSoft","toggle","bind","state","dropdownOpen","setState","render","mapStateToProps","mapDispatchToProps","dispatch","action","onSearch","keyword","searchTasks"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,cADF,EACkBC,cADlB,EACkCC,YADlC,EACgDC,YADhD,QAEO,YAFP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAC3BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,OApBmB,GAoBT,CAACC,MAAD,EAASC,SAAT,KAAqB;AAC7B,WAAKH,KAAL,CAAWI,MAAX,CAAkBF,MAAlB,EAA0BC,SAA1B;AACD,KAtBkB;;AAGjB,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD,GAR0B,CAW3B;AACA;AACA;;;AAEAH,EAAAA,MAAM,GAAG;AACP,SAAKI,QAAL,CAAc;AACZD,MAAAA,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADd,KAAd;AAGD;;AAODE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,YAAnC;AAAiD,MAAA,MAAM,EAAE,KAAKH,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAG,MAAM,KAAKJ,OAAL,CAAa,MAAb,EAAqB,CAArB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAG,MAAM,KAAKA,OAAL,CAAa,MAAb,EAAqB,CAAC,CAAtB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAG,MAAM,KAAKA,OAAL,CAAa,QAAb,EAAuB,CAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAJF,EAKE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAG,MAAM,KAAKA,OAAL,CAAa,QAAb,EAAuB,CAAC,CAAxB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CAJF,CADF;AAcD;;AAzC0B;;AA6C7B,IAAIU,eAAe,GAAIJ,KAAD,IAAW;AAC/B,SAAO,EAAP;AACD,CAFD;;AAIA,IAAIK,kBAAkB,GAAG,CAACC,QAAD,EAAUC,MAAV,KAAqB;AAC5C,SAAO;AACLC,IAAAA,QAAQ,EAAGC,OAAD,IAAa;AACrBH,MAAAA,QAAQ,CAAChB,OAAO,CAACoB,WAAR,CAAoBD,OAApB,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAepB,OAAO,CAACe,eAAD,EAAiBC,kBAAjB,CAAP,CAA4Cd,IAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap';\n\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n\n  // componentWillReceiveProps(nextProps){\n  //   console.log(nextProps);\n  // }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  onClick = (softBy, softValue)=>{\n    this.props.onSoft(softBy, softValue);\n  }\n\n\n  render() {\n    return (\n      <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret color=\"primary\">\n          Sắp xếp\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem onClick={ () => this.onClick('name', 1)}>Tên A-Z</DropdownItem>\n          <DropdownItem onClick={ () => this.onClick('name', -1)}>Tên Z-A</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem onClick={ () => this.onClick('status', 1)}>Trạng thái Kích hoạt</DropdownItem>\n          <DropdownItem onClick={ () => this.onClick('status', -1)}>Trạng thái Ẩn</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {};\n};\n\nlet mapDispatchToProps = (dispatch,action) => {\n  return {\n    onSearch: (keyword) => {\n      dispatch(actions.searchTasks(keyword));\n    }\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Sort);"]},"metadata":{},"sourceType":"module"}