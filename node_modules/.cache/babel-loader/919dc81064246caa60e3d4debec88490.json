{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport { Table, FormGroup, Input } from 'reactstrap';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      let target = event.target;\n      let name = target.name;\n      let value = target.value;\n      this.setState({\n        [name]: value\n      });\n      let filterObj = {\n        name: name === 'filterName' ? value : this.state.filterName,\n        status: name === 'filterStatus' ? value : this.state.filterStatus\n      };\n      this.props.onFilterTasks(filterObj);\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        tasks = _this$props.tasks,\n        filterTasks = _this$props.filterTasks;\n    let _this$state = this.state,\n        filterName = _this$state.filterName,\n        filterStatus = _this$state.filterStatus; //Filter Tasks\n\n    if (filterTasks && filterTasks.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTasks.name) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTasks.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTasks.status === 1 ? true : false);\n      }\n    }); // console.log(this.props.search);\n    //Task Items\n\n    let elementTask = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        index: index,\n        task: task,\n        editTask: this.props.editTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    });\n    return React.createElement(Table, {\n      bordered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"STT\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"T\\xEAn c\\xF4ng vi\\u1EC7c\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng th\\xE1i\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"H\\xE0nh \\u0111\\u1ED9ng\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"filterName\",\n      id: \"filterName\",\n      value: filterName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"filterStatus\",\n      id: \"filterStatus\",\n      value: filterStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"T\\u1EA5t c\\u1EA3\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"K\\xEDch ho\\u1EA1t\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u1EA8n\")))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, elementTask));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTasks: state.filterTasks,\n    search: state.search\n  };\n};\n\nlet mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTasks: filterObj => {\n      dispatch(actions.filterTasks(filterObj));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskList.js"],"names":["React","Component","Table","FormGroup","Input","TaskItem","connect","actions","TaskList","constructor","props","onChange","event","target","name","value","setState","filterObj","state","filterName","status","filterStatus","onFilterTasks","render","tasks","filterTasks","filter","task","toLowerCase","indexOf","elementTask","map","index","id","editTask","mapStateToProps","search","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Table, FormGroup, Input\n} from 'reactstrap';\n\nimport TaskItem from './TaskItem';\n\nimport { connect } from 'react-redux';\nimport * as actions from './../actions';\n\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            filterName: '',\n            filterStatus: -1\n        }\n    }\n    onChange = (event)=>{\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        this.setState({\n            [name]: value \n        });\n        let filterObj = {\n            name: name === 'filterName' ? value : this.state.filterName,\n            status: name === 'filterStatus' ? value : this.state.filterStatus\n        }\n        this.props.onFilterTasks(filterObj);        \n    }\n\n    render() {\n        var { tasks, filterTasks } = this.props;\n        let { filterName, filterStatus } = this.state;\n        //Filter Tasks\n        if (filterTasks && filterTasks.name) {\n            tasks = tasks.filter(task => {\n                return task.name.toLowerCase().indexOf(filterTasks.name) !== -1\n            });\n        }\n        tasks = tasks.filter(task => {\n            if (filterTasks.status === -1) {\n                return task\n            } else {\n                return task.status === (filterTasks.status === 1 ? true : false)\n            }\n        });\n        // console.log(this.props.search);\n        //Task Items\n        let elementTask = tasks.map((task, index)=>{\n            return <TaskItem \n                        key={task.id} \n                        index={index} \n                        task={task} \n                        editTask={this.props.editTask}\n                    />\n        });\n        return (\n            <Table bordered>\n                <thead>\n                    <tr>\n                        <th>STT</th>\n                        <th>Tên công việc</th>\n                        <th>Trạng thái</th>\n                        <th>Hành động</th>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <FormGroup>\n                                <Input \n                                    type=\"text\" \n                                    name=\"filterName\" \n                                    id=\"filterName\"\n                                    value={ filterName }\n                                    onChange = {this.onChange}\n                                />\n                            </FormGroup>\n                        </td>\n                        <td>\n                            <FormGroup>\n                                <Input \n                                    type=\"select\" \n                                    name=\"filterStatus\" \n                                    id=\"filterStatus\"\n                                    value={ filterStatus }\n                                    onChange = {this.onChange}\n                                >\n                                    <option value={-1}>Tất cả</option>\n                                    <option value={1}>Kích hoạt</option>\n                                    <option value={0}>Ẩn</option>\n                                </Input>\n                            </FormGroup>\n                        </td>\n                        <td></td>\n                    </tr>   \n                </thead>\n                <tbody>\n                    { elementTask }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.tasks,\n        filterTasks: state.filterTasks,\n        search: state.search\n    }\n};\n\nlet mapDispatchToProps = (dispatch, props) => {\n    return {\n        onFilterTasks: (filterObj) => {\n            dispatch(actions.filterTasks(filterObj));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}