{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-management/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Alert, Container, Row, Col, Button } from 'reactstrap';\nimport randomstring from 'randomstring';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createSampleData = () => {\n      let tasks = [{\n        id: randomstring.generate(5),\n        namework: 'Học HTML',\n        status: true\n      }, {\n        id: randomstring.generate(5),\n        namework: 'Học CSS',\n        status: true\n      }, {\n        id: randomstring.generate(5),\n        namework: 'Học ReactJS Basic',\n        status: false\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.setState({\n        tasks: tasks\n      });\n    };\n\n    this.onToggleForm = () => {\n      if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n        this.setState({\n          isDisplayForm: true,\n          taskEditing: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          taskEditing: null\n        });\n      }\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false,\n        taskEditing: null\n      });\n    };\n\n    this.onSubmit = data => {\n      let tasks = this.state.tasks;\n\n      if (data.id === '') {\n        data.id = randomstring.generate(5);\n        tasks.push(data);\n      } else {\n        let index = tasks.findIndex(() => data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        taskEditing: null\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.editTask = id => {\n      this.onShowForm();\n      let tasks = this.state.tasks;\n      var index = tasks.findIndex(() => id);\n      console.log(index);\n      var taskEditing = tasks[index];\n      this.setState({\n        taskEditing\n      });\n    };\n\n    this.onUpdateStatus = id => {\n      var tasks = this.state.tasks;\n      var index = tasks.findIndex(task => task.id == id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n      }\n\n      this.setState({\n        tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onDelete = id => {\n      var tasks = this.state.tasks;\n      var index = tasks.findIndex(() => id);\n      tasks.splice(index, 1);\n      this.setState({\n        tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      let status = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          filterName: filterName.toLowerCase(),\n          filterStatus: status\n        }\n      });\n    };\n\n    this.onSearch = keyword => {\n      if (keyword) {\n        this.setState({\n          keyword\n        });\n      }\n    };\n\n    this.onSoft = (softBy, softValue) => {\n      this.setState({\n        softBy: softBy,\n        softValue: softValue\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      //id, namework, status \n      isDisplayForm: false,\n      taskEditing: null,\n      filter: {\n        filterName: '',\n        filterStatus: -1\n      },\n      keyword: '',\n      softBy: 'name',\n      softValue: 1\n    };\n  } //Get data\n\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  } //Dữ liệu mẫu\n\n\n  render() {\n    var _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        taskEditing = _this$state.taskEditing,\n        filter = _this$state.filter,\n        keyword = _this$state.keyword,\n        softBy = _this$state.softBy,\n        softValue = _this$state.softValue;\n\n    if (filter && filter.filterName) {\n      tasks = tasks.filter(task => {\n        return task.namework.toLowerCase().indexOf(filter.filterName) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filter.filterStatus === -1) {\n        return task;\n      } else {\n        return task.status === (filter.filterStatus === 1 ? true : false);\n      }\n    });\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.namework.toLowerCase().indexOf(keyword) !== -1;\n      });\n    } //Soft\n\n\n    if (softBy === 'name') {\n      tasks = tasks.sort((a, b) => {\n        var nameA = a.namework.toUpperCase(); // bỏ qua hoa thường\n\n        var nameB = b.namework.toUpperCase(); // bỏ qua hoa thường\n\n        if (nameA < nameB) {\n          return -softValue;\n        }\n\n        if (nameA > nameB) {\n          return softValue;\n        } // name trùng nhau\n\n\n        return 0;\n      });\n    } else {\n      tasks = tasks.sort((a, b) => {\n        var nameA = a.status;\n        var nameB = b.status;\n\n        if (nameA < nameB) {\n          return softValue;\n        }\n\n        if (nameA > nameB) {\n          return -softValue;\n        } // name trùng nhau\n\n\n        return 0;\n      });\n    }\n\n    let elementTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      task: taskEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: isDisplayForm ? \"4\" : \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, elementTaskForm), React.createElement(Col, {\n      md: isDisplayForm ? \"8\" : \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: \"12\",\n      className: \"p-0 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), ' ', React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.createSampleData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"T\\u1EA1o d\\u1EEF li\\u1EC7u m\\u1EABu\"), ' '), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSoft: this.onSoft,\n      softBy: softBy,\n      softValue: softValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      editTask: this.editTask,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-management/src/App.js"],"names":["React","Component","Alert","Container","Row","Col","Button","randomstring","TaskForm","Control","TaskList","App","constructor","props","createSampleData","tasks","id","generate","namework","status","localStorage","setItem","JSON","stringify","setState","onToggleForm","state","isDisplayForm","taskEditing","onShowForm","onCloseForm","onSubmit","data","push","index","findIndex","editTask","console","log","onUpdateStatus","task","onDelete","splice","onFilter","filterName","filterStatus","parseInt","filter","toLowerCase","onSearch","keyword","onSoft","softBy","softValue","componentWillMount","getItem","parse","render","indexOf","sort","a","b","nameA","toUpperCase","nameB","elementTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {\n  Alert, Container, Row, Col, Button\n} from 'reactstrap';\nimport randomstring from 'randomstring';\n\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [], //id, namework, status \n      isDisplayForm: false,\n      taskEditing: null,\n      filter: {\n        filterName: '',\n        filterStatus: -1\n      },\n      keyword: '',\n      softBy: 'name',\n      softValue: 1\n    }\n  }\n\n  //Get data\n  componentWillMount() {\n    if(localStorage && localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  //Dữ liệu mẫu\n  createSampleData = () => {\n    let tasks = [\n      {\n        id: randomstring.generate(5),\n        namework: 'Học HTML',\n        status: true\n      },\n      {\n        id: randomstring.generate(5),\n        namework: 'Học CSS',\n        status: true\n      },\n      {\n        id: randomstring.generate(5),\n        namework: 'Học ReactJS Basic',\n        status: false\n      }\n    ];\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    this.setState({\n      tasks: tasks\n    });\n  }\n\n  //Đóng/mở form\n  onToggleForm  = () => {\n    if(this.state.isDisplayForm && this.state.taskEditing !== null ){\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null\n      });\n    }else{\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null\n      });\n    }\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true\n    });\n  }\n  //Đóng Form\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n      taskEditing: null\n    });\n  }\n\n  //Click submit\n  onSubmit = (data) => {\n    let { tasks } = this.state;\n    if(data.id === ''){\n      data.id = randomstring.generate(5);\n      tasks.push(data)\n    }else{\n      let index = tasks.findIndex(() => data.id);\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null\n    })\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n  //Chỉnh sửa form\n  editTask = (id) => {\n    this.onShowForm();\n    let { tasks } = this.state;\n    var index = tasks.findIndex(() => id);\n    console.log(index);\n    var taskEditing = tasks[index];\n    this.setState({\n      taskEditing\n    });\n\n    \n    \n  }\n\n  //Cập nhật status\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = tasks.findIndex((task) => task.id==id);\n    if( index !== -1){\n      tasks[index].status = !tasks[index].status\n    }\n    this.setState({\n      tasks\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n\n\n  //Xóa phần tử\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = tasks.findIndex(() => id);\n    tasks.splice(index, 1)\n    this.setState({\n      tasks\n    });\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n\n  //Filter\n  onFilter = (filterName, filterStatus) => {\n    let status = parseInt(filterStatus,10);\n    this.setState({\n      filter: {\n        filterName: filterName.toLowerCase(),\n        filterStatus : status\n      }\n    });\n  }\n  //Search\n  onSearch = (keyword) => {\n    if(keyword){\n      this.setState({\n        keyword\n      });\n    }\n\n  }\n  //Soft\n  onSoft = (softBy, softValue) => {\n    this.setState({\n          softBy: softBy,\n          softValue: softValue\n    });\n  }\n\n  render() {\n    var { tasks, isDisplayForm, taskEditing, filter, keyword, softBy, softValue } = this.state;\n    if(filter && filter.filterName){\n      tasks = tasks.filter(task => {\n        return task.namework.toLowerCase().indexOf(filter.filterName) !== -1\n      });\n    }\n\n    tasks = tasks.filter(task => {\n        if(filter.filterStatus === -1 ){\n          return task\n        }else{\n          return task.status === (filter.filterStatus === 1 ? true : false)\n        }  \n    });\n\n    if(keyword){\n      tasks = tasks.filter(task => {\n        return task.namework.toLowerCase().indexOf(keyword) !== -1\n      });\n    }\n    //Soft\n    if(softBy === 'name'){\n      tasks = tasks.sort((a, b) => {\n        var nameA = a.namework.toUpperCase(); // bỏ qua hoa thường\n        var nameB = b.namework.toUpperCase(); // bỏ qua hoa thường\n        if (nameA < nameB) {\n          return -softValue;\n        }\n        if (nameA > nameB) {\n          return softValue  ;\n        }\n        // name trùng nhau\n        return 0;\n      });\n    }else{\n      tasks = tasks.sort((a, b) => {\n        var nameA = a.status;\n        var nameB = b.status; \n        if (nameA < nameB) {\n          return softValue;\n        }\n        if (nameA > nameB) {\n          return -softValue  ;\n        }\n        // name trùng nhau\n        return 0;\n      });\n    }\n\n    let elementTaskForm = isDisplayForm \n          ? <TaskForm  \n              onSubmit={ this.onSubmit } \n              onCloseForm={ this.onCloseForm }\n              task = {taskEditing}\n            /> \n          : '';\n    return (\n      <div className=\"App\">\n        <Alert color=\"primary\">\n          <h1 className=\"title-app\">Quản lý công việc</h1>\n        </Alert>\n        <Container>\n          <Row>\n            <Col md={ isDisplayForm ? \"4\" : \"0\"}>\n              { elementTaskForm }\n            </Col>\n            <Col md={ isDisplayForm ? \"8\" : \"12\" }>\n              <Col md=\"12\" className=\"p-0 mb-2\">\n                <Button color=\"primary\" onClick={ this.onToggleForm }>Thêm công việc</Button>{' '}\n                <Button color=\"danger\" onClick={this.createSampleData}>Tạo dữ liệu mẫu</Button>{' '}\n              </Col>\n              <Control \n                onSearch={this.onSearch}\n                onSoft={this.onSoft}\n                softBy={softBy}\n                softValue={softValue}\n              />\n              <TaskList \n                tasks={ tasks } \n                editTask={this.editTask}\n                onUpdateStatus = {this.onUpdateStatus}\n                onDelete = {this.onDelete}\n                onFilter = {this.onFilter}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}