{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-management/src/components/TaskItem.js\";\nimport React, { Component } from 'react';\nimport { Button, Badge } from 'reactstrap';\n\nclass TaskItem extends Component {\n  editTask(id) {\n    this.props.onToggleForm();\n  }\n\n  render() {\n    let _this$props = this.props,\n        index = _this$props.index,\n        task = _this$props.task;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, task.namework), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: task.status ? \"success\" : \"danger\",\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, task.status ? \"Kích hoạt\" : \"Ẩn\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"warning\",\n      onClick: () => this.editTask(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"S\\u1EEDa\"), ' ', React.createElement(Button, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"X\\xF3a\")));\n  }\n\n}\n\nexport default TaskItem;","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-management/src/components/TaskItem.js"],"names":["React","Component","Button","Badge","TaskItem","editTask","id","props","onToggleForm","render","index","task","namework","status"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EACYC,KADZ,QAEO,YAFP;;AAKA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,QAAQ,CAACC,EAAD,EAAI;AACR,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBACiB,KAAKF,KADtB;AAAA,QACCG,KADD,eACCA,KADD;AAAA,QACQC,IADR,eACQA,IADR;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBD,KAAK,GAAG,CAA1B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,IAAI,CAACC,QAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAED,IAAI,CAACE,MAAL,GAAc,SAAd,GAA0B,QAAxC;AAAkD,MAAA,SAAS,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACE,MAAL,GAAc,WAAd,GAA4B,IADjC,CADJ,CAHJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAI,KAAKR,QAAL,CAAcM,IAAI,CAACL,EAAnB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAC8E,GAD9E,EAEI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CARJ,CADJ;AAeH;;AAtB4B;;AAyBjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button, Badge\n} from 'reactstrap';\n\n\nclass TaskItem extends Component {\n    editTask(id){\n        this.props.onToggleForm();\n    }\n\n    render() {\n        let { index, task } = this.props;\n        return (\n            <tr>\n                <th scope=\"row\">{ index + 1 }</th>\n                <td>{ task.namework }</td>\n                <td>\n                    <Badge color={task.status ? \"success\" : \"danger\"} className=\"p-2\">\n                        {task.status ? \"Kích hoạt\" : \"Ẩn\"}\n                    </Badge>\n                </td>\n                <td>\n                    <Button color=\"warning\" onClick={()=>this.editTask(task.id)}>Sửa</Button>{' '}\n                    <Button color=\"danger\">Xóa</Button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}