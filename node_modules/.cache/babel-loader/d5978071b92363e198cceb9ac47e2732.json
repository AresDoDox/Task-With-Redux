{"ast":null,"code":"var _jsxFileName = \"/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from './../actions';\nimport { Card, CardHeader, CardBody, CardFooter, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeForm = event => {\n      let target = event.target;\n      let name = target.name;\n      let value = target.value;\n\n      if (name === 'statuswork') {\n        value = value ? true : false;\n      }\n\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.tasks);\n    };\n\n    this.onCloseForm = () => {\n      this.props.onCloseForm();\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onAddTask(this.state); // Cancel & close form\n\n      this.onClear();\n      this.onCloseForm();\n    };\n\n    this.onClear = () => {\n      this.setState({\n        namework: '',\n        statuswork: false\n      });\n    };\n\n    this.state = {\n      id: '',\n      namework: '',\n      statuswork: false\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.task) {\n      this.setState({\n        id: this.props.task.id,\n        namework: this.props.task.namework,\n        statuswork: this.props.task.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.task) {\n      this.setState({\n        id: nextProps.task.id,\n        namework: nextProps.task.namework,\n        statuswork: nextProps.task.status\n      });\n    }\n\n    if (nextProps && nextProps.task === null) {\n      this.setState({\n        id: '',\n        namework: '',\n        statuswork: false\n      });\n    }\n  }\n\n  render() {\n    // let { namework, status } = this.state;\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.id !== '' ? 'Chỉnh sửa công việc' : 'Thêm công việc'), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"namework\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"T\\xEAn c\\xF4ng vi\\u1EC7c:\"), React.createElement(Input, {\n      type: \"text\",\n      id: \"namework\",\n      name: \"namework\",\n      value: this.state.namework,\n      onChange: this.onChangeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"statuswork\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng th\\xE1i\"), React.createElement(Input, {\n      type: \"select\",\n      id: \"statuswork\",\n      name: \"statuswork\",\n      value: this.state.statuswork,\n      onChange: this.onChangeForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"K\\xEDch ho\\u1EA1t\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"\\u1EA8n\")))), React.createElement(CardFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"L\\u01B0u l\\u1EA1i\"), ' ', React.createElement(Button, {\n      onClick: this.onClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"H\\u1EE7y b\\u1ECF\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n}; // valiable props\n\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onAddTask: task => {\n      dispatch(action.addTask(task));\n    }\n  };\n}; //action props\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["/Users/su/Documents/LuyntoLearn/task-with-redux/src/components/TaskForm.js"],"names":["React","Component","connect","action","Card","CardHeader","CardBody","CardFooter","Form","FormGroup","Label","Input","Button","TaskForm","constructor","props","onChangeForm","event","target","name","value","setState","console","log","state","tasks","onCloseForm","onSubmit","preventDefault","onAddTask","onClear","namework","statuswork","id","componentWillMount","task","status","componentWillReceiveProps","nextProps","render","mapStateToProps","mapDispatchToProps","dispatch","addTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from './../actions';\n\nimport {\n  Card, CardHeader, CardBody, CardFooter,\n  Form, FormGroup, Label, Input, Button\n} from 'reactstrap';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      namework:'',\n      statuswork: false\n    }\n  }\n\n  componentWillMount() {\n    if(this.props.task){\n      this.setState({\n        id: this.props.task.id,\n        namework: this.props.task.namework,\n        statuswork: this.props.task.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps && nextProps.task){\n      this.setState({\n        id: nextProps.task.id,\n        namework: nextProps.task.namework,\n        statuswork: nextProps.task.status\n      });\n    }\n    if(nextProps && nextProps.task === null){\n      this.setState({\n        id: '',\n        namework: '',\n        statuswork: false\n      });\n    }\n  }\n\n  onChangeForm = (event) => {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n    if(name === 'statuswork'){\n      value = value ? true : false;\n    }\n    this.setState({\n      [name] : value\n    });\n    console.log(this.state.tasks)\n  }\n\n  onCloseForm = () => {\n    this.props.onCloseForm();\n  }\n\n  onSubmit = (event) =>{\n    event.preventDefault();\n    this.props.onAddTask(this.state);\n    // Cancel & close form\n    this.onClear();\n    this.onCloseForm();\n  }\n\n  onClear = () => {\n    this.setState({\n      namework: '',\n      statuswork: false\n    })\n  }\n\n  render() {\n    // let { namework, status } = this.state;\n    return (\n      <Card>\n        <CardHeader>{ this.state.id !== '' ? 'Chỉnh sửa công việc': 'Thêm công việc' }</CardHeader>\n        <Form onSubmit={this.onSubmit}>\n          <CardBody>\n            <FormGroup>\n              <Label for=\"namework\">Tên công việc:</Label>\n              <Input\n                type=\"text\"\n                id=\"namework\"\n                name=\"namework\"\n                value={ this.state.namework  }\n                onChange={this.onChangeForm}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"statuswork\">Trạng thái</Label>\n              <Input\n                type=\"select\"\n                id=\"statuswork\"\n                name=\"statuswork\"\n                value={ this.state.statuswork }\n                onChange={this.onChangeForm}\n              >\n                <option value={true}>Kích hoạt</option>\n                <option value={false}>Ẩn</option>\n              </Input>\n            </FormGroup>\n          </CardBody>\n          <CardFooter>\n            <Button type=\"submit\" color=\"primary\">Lưu lại</Button>{' '}\n            <Button onClick={this.onClear}>Hủy bỏ</Button>\n          </CardFooter>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks\n  } \n};// valiable props\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n      onAddTask: (task) => {\n        dispatch(action.addTask(task));\n      }\n  }\n}//action props\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);"]},"metadata":{},"sourceType":"module"}